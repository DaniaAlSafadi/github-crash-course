name: Deploy website
on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/deployment1.yml'
      - '.github/workflows/deployment2.yml'
      - '.github/workflows/demo1.yml'
      - '.github/workflows/deployment.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        working-directory: events-deep-dive
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "No lock file found, using npm install"
            npm install
          fi
      - name: Lint code
        working-directory: events-deep-dive
        run: npm run lint
      - name: Test code
        working-directory: events-deep-dive
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file-js}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        working-directory: events-deep-dive
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "No lock file found, using npm install"
            npm install
          fi
      - name: Build website
        working-directory: events-deep-dive
        run: npm run build
      - name: Publish JS filename
        id: publish
        run:  find dist/assets/*.js -type f -execdir echo 'script-file-js={}' >> $GITHUB_OUTPUT ';' 
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: events-deep-dive/dist
          #path: |
          # events-deep-dive/dist
          # events-deep-dive/package.json
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: events-deep-dive/dist
    - name: Output contents
      run: ls events-deep-dive/dist
    - name: Output filename
      run: echo "${{needs.build.outputs.script-file}}"
    - name: Deploy
      working-directory: events-deep-dive/dist
      run: echo "Deploying..."

